AWSTemplateFormatVersion: '2010-09-09'
Resources:
#auto scaling group
  WebServerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: 'AutomationBoxes'
      VPCZoneIdentifier:
        - subnet-084ab536ab905c9be # Find public subnets within the default VPC or 
        - subnet-024f86a6e15c6282b
      DesiredCapacity: '3'
      HealthCheckType: 'ELB'
      HealthCheckGracePeriod: 30 
      LaunchConfigurationName: !Ref WebServersLC
      MaxSize: '3'
      MinSize: '3'
      TargetGroupARNs: 
      - !Ref MyApplicationLoadBalancerTargetGrp
      - !Ref MyApplicationLoadBalancerTargetGrpHttps 

#load balancer target group http 
  MyApplicationLoadBalancerTargetGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /index.html
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 5
      Name: MyalbTargetGroup
      Port: 80
      Protocol: HTTP
      Tags: 
        - Key: user
          Value: desire.bahbioh.labs
        - Key: stelligent-u-lesson
          Value: "7.1"
        - Key: stelligent-u-lab
          Value: "7.1.1"
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: vpc-0aac7ec1cb9a002ec

#load balancer target group https
  MyApplicationLoadBalancerTargetGrpHttps:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /index.html
      HealthCheckProtocol: HTTP
      Name: MyalbTargetGroupHttps
      Port: 80
      Protocol: HTTP
      Tags: 
        - Key: user
          Value: desire.bahbioh.labs
        - Key: stelligent-u-lesson
          Value: "7.1"
        - Key: stelligent-u-lab
          Value: "7.1.1"
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: vpc-0aac7ec1cb9a002ec

#application load balancer
  MyAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - sg-0d1b5e753a2fc17cb
      Subnets: 
        - subnet-084ab536ab905c9be # Find public subnets within the default VPC or 
        - subnet-024f86a6e15c6282b
      Tags: 
        - Key: user
          Value: desire.bahbioh.labs
        - Key: stelligent-u-lesson
          Value: "7.1"
        - Key: stelligent-u-lab
          Value: "7.1.1"
      Type: application

#load balancing listener
  MyAlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: 
      - TargetGroupArn: !Ref MyApplicationLoadBalancerTargetGrp
        Type: forward
      LoadBalancerArn: !Ref MyAppLoadBalancer
      Port: 80
      Protocol: HTTP

#load balancing listener https
  MyAlbListenerHttps:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties: 
        DefaultActions: 
        - TargetGroupArn: !Ref MyApplicationLoadBalancerTargetGrpHttps
          Type: forward
        LoadBalancerArn: !Ref MyAppLoadBalancer
        Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:324320755747:certificate/e2c0bdf9-4a5c-4d30-9059-b79d50935281
        SslPolicy: 'ELBSecurityPolicy-FS-2018-06'
        Port: 443
        Protocol: HTTPS

#auto scaling launch config
  WebServersLC:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0000025f7c02a13b2
      InstanceType: t2.micro
      LaunchConfigurationName: SimpleWebServerLC
      SecurityGroups:
        - sg-0d1b5e753a2fc17cb
      UserData: 
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe

            yum install -y aws-cfn-bootstrap

            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --configsets All \
              --region ${AWS::Region}

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --resource WebServersLC \
              --region ${AWS::Region}
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          All:
            - ConfigureStelligentProject
        ConfigureStelligentProject:
          packages:
            yum:
              nginx: []
          files:
            /usr/share/nginx/html/index.html:
              content: '<p>Automation for the People</p>'
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'

Outputs:
  LoadBalancerDNSName:
     Description: load balancer DNS endpoint
     Value: !GetAtt MyAppLoadBalancer.DNSName

