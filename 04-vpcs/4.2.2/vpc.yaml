AWSTemplateFormatVersion: 2010-09-09
Description: custom vpc 

Parameters: 
     PeeredVpcCidrBlock:
        Description: Cidr block of peered vpc
        Type: String
     RequesterVpcCidrBlock:
        Description: Cidr block of the requester vpc
        Type: String
     PeeredVPCId:
        Description: id of peered VPC
        Type: String
     RequesterVPCId:
        Description: id of Requester VPC
        Type: String

Resources: 
#vpc
      DesireVPC:
          Type: AWS::EC2::VPC
          Properties:
            CidrBlock: !Ref RequesterVpcCidrBlock
            InstanceTenancy: default
            Tags:
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
      NatEIP:
          Type: AWS::EC2::EIP
          Properties: 
            Domain: vpc
            Tags:
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
#public subnet
      DPublicSubnet:
          Type: AWS::EC2::Subnet
          Properties:
            AvailabilityZone: "us-east-1a"
            VpcId: !Ref DesireVPC
            CidrBlock: 10.16.0.0/24
            Tags:
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
#private subnet
      DPrivateSubnet:
          Type: AWS::EC2::Subnet
          Properties:
            AvailabilityZone: "us-east-1a"
            VpcId: !Ref DesireVPC
            CidrBlock: 10.16.1.0/24
            Tags:
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
#internet Gateway
      DesiIGW:
          Type: AWS::EC2::InternetGateway
          Properties:
            Tags:
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
#nat gateway
      DesiNatGW:
          Type: AWS::EC2::NatGateway
          Properties: 
            AllocationId: !GetAtt NatEIP.AllocationId
            SubnetId: !Ref DPublicSubnet
            Tags: 
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
#internet gateway attachement
      DesiIgwAttachement:
          Type: AWS::EC2::VPCGatewayAttachment
          Properties: 
            InternetGatewayId: !Ref DesiIGW
            VpcId: !Ref DesireVPC
#route table
      DesiRouteTable:
          Type: AWS::EC2::RouteTable
          Properties: 
            Tags: 
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
            VpcId: !Ref DesireVPC
      DesiRouteTable02:
          Type: AWS::EC2::RouteTable
          Properties: 
            Tags: 
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
            VpcId: !Ref DesireVPC
      
#subnet route table association(public subnet)
      DesiSbnRtTbAssoc:
          Type: AWS::EC2::SubnetRouteTableAssociation
          Properties: 
             RouteTableId: !Ref DesiRouteTable
             SubnetId: !Ref DPublicSubnet
#subnet route table association(private subnet)
      DesiPrivateSbnRtTbAssoc:
          Type: AWS::EC2::SubnetRouteTableAssociation
          Properties: 
             RouteTableId: !Ref DesiRouteTable02
             SubnetId: !Ref DPrivateSubnet
#routes
     #internet gateway route
      DesiRoute:
          Type: AWS::EC2::Route
          Properties:
            GatewayId: !Ref DesiIGW
            RouteTableId: !Ref DesiRouteTable
            DestinationCidrBlock: 0.0.0.0/0
     #Nat route
      DesiNatRoute:
          Type: AWS::EC2::Route
          Properties:
            NatGatewayId: !Ref DesiNatGW
            RouteTableId: !Ref DesiRouteTable02
            DestinationCidrBlock: 0.0.0.0/0
     #VPC peering route
      DesiVPCPeeringRoute:
          Type: AWS::EC2::Route
          Properties: 
            RouteTableId: !Ref DesiRouteTable
            VpcPeeringConnectionId: pcx-02d9f70bcb8278617
            DestinationCidrBlock: !Ref PeeredVpcCidrBlock
#NACls
      #Nacl for public subnet
      DesiPublicNacl:
          Type: AWS::EC2::NetworkAcl
          Properties: 
            Tags: 
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
            VpcId: !Ref DesireVPC
      #Nacl rules for public subnet
      PublicSubnetInboundMYIP:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPublicNacl
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            CidrBlock: 71.65.236.215/32 #my ip
            PortRange:
              From: 22
              To: 22
      PublicSubnetInboundFromPrivateSubnet: #issue with connection to private instance was here. 
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPublicNacl
            RuleNumber: 200
            Protocol: -1   #all ports needed to be opened opened
            RuleAction: allow
            CidrBlock: 10.16.1.0/24 #private subnet
#Inbound rule for public subnet from private subnet in Peered VPC
      PublicSubnetInboundFromPeeredVPC:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPublicNacl
            RuleNumber: 300
            Protocol: -1   #all ports needed to be opened opened
            RuleAction: allow
            CidrBlock: !Ref PeeredVpcCidrBlock
      PublicSubnetOutboundRules:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPublicNacl
            RuleNumber: 100
            Protocol: -1
            Egress: true
            RuleAction: allow
            CidrBlock: 0.0.0.0/0
      #subnet association for "public" nacl
      PublicSubnetNaclAssociation:
          Type: AWS::EC2::SubnetNetworkAclAssociation
          Properties: 
            NetworkAclId: !Ref DesiPublicNacl
            SubnetId: !Ref DPublicSubnet
      #Nacl rule for private subnet
      DesiPrivateNacl:
          Type: AWS::EC2::NetworkAcl
          Properties: 
            Tags: 
            - Key: user
              Value: desire.bahbioh.labs
            - Key: stelligent-u-lesson
              Value: "4.1"
            - Key: stelligent-u-lab
              Value: "4.1.8"
            VpcId: !Ref DesireVPC
      PrivateSubnetInboundSSHRule:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPrivateNacl
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            CidrBlock: 10.16.0.0/24
            PortRange:
              From: 22
              To: 22
      PrivateSubnetInboundICMPRule:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPrivateNacl
            RuleNumber: 200
            Protocol: -1
            RuleAction: allow
            CidrBlock: 10.16.0.0/24
            PortRange:
              From: -1
              To: -1
      PrivateSubnetInboundHTTPRule:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPrivateNacl
            RuleNumber: 300
            Protocol: 6
            RuleAction: allow
            CidrBlock: 10.16.0.0/24
            PortRange:
              From: 80
              To: 80
      PrivateSubnetOutboundRules:
          Type: AWS::EC2::NetworkAclEntry
          Properties:
            NetworkAclId: !Ref DesiPrivateNacl
            RuleNumber: 100
            Protocol: -1
            Egress: true
            RuleAction: allow
            CidrBlock: 0.0.0.0/0
      PrivateSubnetNaclAssociation:
          Type: AWS::EC2::SubnetNetworkAclAssociation
          Properties: 
            NetworkAclId: !Ref DesiPrivateNacl
            SubnetId: !Ref DPrivateSubnet      

Outputs:
      VPCid:
        Description: the VPC id 
        Value: !Ref DesireVPC
      PublicSubnetid:
        Description: public subnet id
        Value: !Ref DPublicSubnet
      PrivateSubnetid:
        Description: private subnet id
        Value: !Ref DPrivateSubnet